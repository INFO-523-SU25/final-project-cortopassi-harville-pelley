---
title: "Predicting MLB Hall of Fame Inductions"
subtitle: "Proposal"
author: 
  - name: "Team Fastball - Austin Cortopassi, David Pelley, Nathan Harville"
    affiliations:
      - name: "College of Information Science, University of Arizona"
description: "Building a machine learning model to predict whether a Major League Baseball player will be inducted into the Hall of Fame using career statistics and achievements."
format:
  html:
    code-tools: true
    code-overflow: wrap
    code-line-numbers: true
    embed-resources: true
editor: visual
code-annotations: hover
execute:
  warning: false
jupyter: python3
---


```{python}
#| label: load-pkgs
#| message: false
import numpy as np
import pandas as pd
```

## **Data Example**

```{python}
#| label: load-dataset
#| message: false


people = pd.read_csv("data/People.csv")
people.head(5)
```


We are using the Lahman Baseball Database because it contains rich, historical MLB data that spans from the 1800s to the present day. Our data includes career statistics and achievements of players in the following dimensions:

Source: Society For American Baseball Research - [Lahman Baseball Dataset](https://sabr.org/lahman-database/)

- People: Player biographical data
- Batting, Pitching, Fielding: Regular season performance
- BattingPost, PitchingPost, FieldingPost: Postseason performance
- Teams: Team performance stats
- HallOfFame: Hall of Fame voting results

Each table includes a playerID column, allowing us to merge across data sources.

## **Questions**  
Can we predict whether a player will be inducted into the MLB Hall of Fame based on their career statistics and achievements?  
What features (e.g., batting stats, pitching metrics, postseason performance) are most predictive of a Hall of Fame induction?

## **Analysis Plan**

**Data Preparation  **
Merge datasets using playerID. Aggregate season-level stats into career totals. Handle missing values and perform EDA.

**Feature Engineering  **
- Austin: Aggregate batting and batting_post, calculate derived metrics like AVG, OPS, HR/year.  
- David: Aggregate pitching and pitching_post, derive metrics such as WHIP, K/BB, quality starts.  
- Nate: Aggregate fielding and fielding_post, derive metrics like position flexibility, total chances, defensive WAR.

**Modeling & Evaluation  **
- Train baseline models: logistic regression, decision tree  
- Tune hyperparameters and evaluate using metrics like accuracy, precision, recall, F1-score, AUC  
- Analyze feature importances and model performance  
- Tools: Python, pandas, scikit-learn, matplotlib, seaborn, Jupyter/Quarto

## **Weekly Planning**

Week 1:  
- Load and clean all 9 datasets  
- Merge into a unified DataFrame  
- Initial EDA

Week 2:  
- Aggregate season stats to career-level  
- Engineer new features  
- Merge with Hall of Fame labels

Week 3:  
- Train and tune models (logistic regression, decision tree)  
- Evaluate performance

Week 4:  
- Final model assessment  
- Data visualizations and feature analysis  
- Write final report and create presentation